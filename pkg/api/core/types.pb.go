// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: api/core/types.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AutomationKind int32

const (
	// enums populate a global namespace, so spell these out.
	// `Kustomization` and `HelmRelease` are already taken as names.
	AutomationKind_KustomizationAutomation AutomationKind = 0
	AutomationKind_HelmReleaseAutomation   AutomationKind = 1
)

// Enum value maps for AutomationKind.
var (
	AutomationKind_name = map[int32]string{
		0: "KustomizationAutomation",
		1: "HelmReleaseAutomation",
	}
	AutomationKind_value = map[string]int32{
		"KustomizationAutomation": 0,
		"HelmReleaseAutomation":   1,
	}
)

func (x AutomationKind) Enum() *AutomationKind {
	p := new(AutomationKind)
	*p = x
	return p
}

func (x AutomationKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AutomationKind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_types_proto_enumTypes[0].Descriptor()
}

func (AutomationKind) Type() protoreflect.EnumType {
	return &file_api_core_types_proto_enumTypes[0]
}

func (x AutomationKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AutomationKind.Descriptor instead.
func (AutomationKind) EnumDescriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{0}
}

type SourceRef_SourceKind int32

const (
	SourceRef_GitRepository  SourceRef_SourceKind = 0
	SourceRef_Bucket         SourceRef_SourceKind = 1
	SourceRef_HelmRepository SourceRef_SourceKind = 2
	SourceRef_HelmChart      SourceRef_SourceKind = 3
)

// Enum value maps for SourceRef_SourceKind.
var (
	SourceRef_SourceKind_name = map[int32]string{
		0: "GitRepository",
		1: "Bucket",
		2: "HelmRepository",
		3: "HelmChart",
	}
	SourceRef_SourceKind_value = map[string]int32{
		"GitRepository":  0,
		"Bucket":         1,
		"HelmRepository": 2,
		"HelmChart":      3,
	}
)

func (x SourceRef_SourceKind) Enum() *SourceRef_SourceKind {
	p := new(SourceRef_SourceKind)
	*p = x
	return p
}

func (x SourceRef_SourceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceRef_SourceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_types_proto_enumTypes[1].Descriptor()
}

func (SourceRef_SourceKind) Type() protoreflect.EnumType {
	return &file_api_core_types_proto_enumTypes[1]
}

func (x SourceRef_SourceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceRef_SourceKind.Descriptor instead.
func (SourceRef_SourceKind) EnumDescriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{1, 0}
}

type Bucket_Provider int32

const (
	Bucket_Generic Bucket_Provider = 0
	Bucket_AWS     Bucket_Provider = 1
	Bucket_GCP     Bucket_Provider = 2
)

// Enum value maps for Bucket_Provider.
var (
	Bucket_Provider_name = map[int32]string{
		0: "Generic",
		1: "AWS",
		2: "GCP",
	}
	Bucket_Provider_value = map[string]int32{
		"Generic": 0,
		"AWS":     1,
		"GCP":     2,
	}
)

func (x Bucket_Provider) Enum() *Bucket_Provider {
	p := new(Bucket_Provider)
	*p = x
	return p
}

func (x Bucket_Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bucket_Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_types_proto_enumTypes[2].Descriptor()
}

func (Bucket_Provider) Type() protoreflect.EnumType {
	return &file_api_core_types_proto_enumTypes[2]
}

func (x Bucket_Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bucket_Provider.Descriptor instead.
func (Bucket_Provider) EnumDescriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{10, 0}
}

type Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours   int64 `protobuf:"varint,1,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes int64 `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Seconds int64 `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *Interval) Reset() {
	*x = Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{0}
}

func (x *Interval) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *Interval) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *Interval) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type SourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind SourceRef_SourceKind `protobuf:"varint,1,opt,name=kind,proto3,enum=gitops_core.v1.SourceRef_SourceKind" json:"kind,omitempty"`
	Name string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SourceRef) Reset() {
	*x = SourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRef) ProtoMessage() {}

func (x *SourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRef.ProtoReflect.Descriptor instead.
func (*SourceRef) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{1}
}

func (x *SourceRef) GetKind() SourceRef_SourceKind {
	if x != nil {
		return x.Kind
	}
	return SourceRef_GitRepository
}

func (x *SourceRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason    string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message   string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{2}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Condition) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type GitRepositoryRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch string `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	Tag    string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Semver string `protobuf:"bytes,3,opt,name=semver,proto3" json:"semver,omitempty"`
	Commit string `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *GitRepositoryRef) Reset() {
	*x = GitRepositoryRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRepositoryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepositoryRef) ProtoMessage() {}

func (x *GitRepositoryRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepositoryRef.ProtoReflect.Descriptor instead.
func (*GitRepositoryRef) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{3}
}

func (x *GitRepositoryRef) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *GitRepositoryRef) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GitRepositoryRef) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

func (x *GitRepositoryRef) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

// GroupVersionKind represents an objects Kubernetes API type data
type GroupVersionKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GroupVersionKind) Reset() {
	*x = GroupVersionKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKind) ProtoMessage() {}

func (x *GroupVersionKind) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKind.ProtoReflect.Descriptor instead.
func (*GroupVersionKind) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{4}
}

func (x *GroupVersionKind) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupVersionKind) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GroupVersionKind) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Kustomization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace               string              `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                    string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path                    string              `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	SourceRef               *SourceRef          `protobuf:"bytes,4,opt,name=sourceRef,proto3" json:"sourceRef,omitempty"`
	Interval                *Interval           `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	Conditions              []*Condition        `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`
	LastAppliedRevision     string              `protobuf:"bytes,7,opt,name=lastAppliedRevision,proto3" json:"lastAppliedRevision,omitempty"`
	LastAttemptedRevision   string              `protobuf:"bytes,8,opt,name=lastAttemptedRevision,proto3" json:"lastAttemptedRevision,omitempty"`
	LastHandledReconciledAt string              `protobuf:"bytes,9,opt,name=lastHandledReconciledAt,proto3" json:"lastHandledReconciledAt,omitempty"`
	Inventory               []*GroupVersionKind `protobuf:"bytes,10,rep,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *Kustomization) Reset() {
	*x = Kustomization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kustomization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kustomization) ProtoMessage() {}

func (x *Kustomization) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kustomization.ProtoReflect.Descriptor instead.
func (*Kustomization) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{5}
}

func (x *Kustomization) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Kustomization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Kustomization) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Kustomization) GetSourceRef() *SourceRef {
	if x != nil {
		return x.SourceRef
	}
	return nil
}

func (x *Kustomization) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Kustomization) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Kustomization) GetLastAppliedRevision() string {
	if x != nil {
		return x.LastAppliedRevision
	}
	return ""
}

func (x *Kustomization) GetLastAttemptedRevision() string {
	if x != nil {
		return x.LastAttemptedRevision
	}
	return ""
}

func (x *Kustomization) GetLastHandledReconciledAt() string {
	if x != nil {
		return x.LastHandledReconciledAt
	}
	return ""
}

func (x *Kustomization) GetInventory() []*GroupVersionKind {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type HelmChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SourceRef  *SourceRef   `protobuf:"bytes,3,opt,name=sourceRef,proto3" json:"sourceRef,omitempty"`
	Chart      string       `protobuf:"bytes,4,opt,name=chart,proto3" json:"chart,omitempty"`
	Version    string       `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Interval   *Interval    `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`
	Conditions []*Condition `protobuf:"bytes,7,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *HelmChart) Reset() {
	*x = HelmChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmChart) ProtoMessage() {}

func (x *HelmChart) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmChart.ProtoReflect.Descriptor instead.
func (*HelmChart) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{6}
}

func (x *HelmChart) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmChart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmChart) GetSourceRef() *SourceRef {
	if x != nil {
		return x.SourceRef
	}
	return nil
}

func (x *HelmChart) GetChart() string {
	if x != nil {
		return x.Chart
	}
	return ""
}

func (x *HelmChart) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HelmChart) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *HelmChart) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type HelmRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseName string              `protobuf:"bytes,1,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Namespace   string              `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Interval    *Interval           `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"`
	HelmChart   *HelmChart          `protobuf:"bytes,5,opt,name=helm_chart,json=helmChart,proto3" json:"helm_chart,omitempty"`
	Conditions  []*Condition        `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Inventory   []*GroupVersionKind `protobuf:"bytes,10,rep,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *HelmRelease) Reset() {
	*x = HelmRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmRelease) ProtoMessage() {}

func (x *HelmRelease) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmRelease.ProtoReflect.Descriptor instead.
func (*HelmRelease) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{7}
}

func (x *HelmRelease) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *HelmRelease) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmRelease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmRelease) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *HelmRelease) GetHelmChart() *HelmChart {
	if x != nil {
		return x.HelmChart
	}
	return nil
}

func (x *HelmRelease) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *HelmRelease) GetInventory() []*GroupVersionKind {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type GitRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url        string            `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Reference  *GitRepositoryRef `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	SecretRef  string            `protobuf:"bytes,5,opt,name=secretRef,proto3" json:"secretRef,omitempty"`
	Interval   *Interval         `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`
	Conditions []*Condition      `protobuf:"bytes,7,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *GitRepository) Reset() {
	*x = GitRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepository) ProtoMessage() {}

func (x *GitRepository) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepository.ProtoReflect.Descriptor instead.
func (*GitRepository) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{8}
}

func (x *GitRepository) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GitRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GitRepository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GitRepository) GetReference() *GitRepositoryRef {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *GitRepository) GetSecretRef() string {
	if x != nil {
		return x.SecretRef
	}
	return ""
}

func (x *GitRepository) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *GitRepository) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type HelmRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url        string       `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Interval   *Interval    `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"`
	Conditions []*Condition `protobuf:"bytes,5,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *HelmRepository) Reset() {
	*x = HelmRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmRepository) ProtoMessage() {}

func (x *HelmRepository) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmRepository.ProtoReflect.Descriptor instead.
func (*HelmRepository) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{9}
}

func (x *HelmRepository) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmRepository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HelmRepository) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *HelmRepository) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string          `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Endpoint      string          `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Insecure      bool            `protobuf:"varint,4,opt,name=insecure,proto3" json:"insecure,omitempty"`
	Interval      *Interval       `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	Provider      Bucket_Provider `protobuf:"varint,6,opt,name=provider,proto3,enum=gitops_core.v1.Bucket_Provider" json:"provider,omitempty"`
	Region        string          `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	SecretRefName string          `protobuf:"bytes,8,opt,name=secretRefName,proto3" json:"secretRefName,omitempty"`
	Timeout       int32           `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Conditions    []*Condition    `protobuf:"bytes,10,rep,name=conditions,proto3" json:"conditions,omitempty"`
	BucketName    string          `protobuf:"bytes,11,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{10}
}

func (x *Bucket) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Bucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bucket) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Bucket) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *Bucket) GetInterval() *Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Bucket) GetProvider() Bucket_Provider {
	if x != nil {
		return x.Provider
	}
	return Bucket_Generic
}

func (x *Bucket) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Bucket) GetSecretRefName() string {
	if x != nil {
		return x.SecretRefName
	}
	return ""
}

func (x *Bucket) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Bucket) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Bucket) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace  string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Conditions []*Condition `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Images     []string     `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{11}
}

func (x *Deployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Deployment) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Deployment) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Deployment) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

// UnstructuredObject is a Kubernetes object of an unknown type
type UnstructuredObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupVersionKind *GroupVersionKind `protobuf:"bytes,1,opt,name=groupVersionKind,proto3" json:"groupVersionKind,omitempty"`
	Name             string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace        string            `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Uid              string            `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Status           string            `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Conditions       []*Condition      `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *UnstructuredObject) Reset() {
	*x = UnstructuredObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_core_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnstructuredObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnstructuredObject) ProtoMessage() {}

func (x *UnstructuredObject) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnstructuredObject.ProtoReflect.Descriptor instead.
func (*UnstructuredObject) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{12}
}

func (x *UnstructuredObject) GetGroupVersionKind() *GroupVersionKind {
	if x != nil {
		return x.GroupVersionKind
	}
	return nil
}

func (x *UnstructuredObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnstructuredObject) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UnstructuredObject) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UnstructuredObject) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UnstructuredObject) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

var File_api_core_types_proto protoreflect.FileDescriptor

var file_api_core_types_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x54, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xa9, 0x01, 0x0a,
	0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x38, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x65, 0x6c,
	0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x10, 0x03, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x6c, 0x0a, 0x10, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x22, 0x56, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe1, 0x03, 0x0a, 0x0d, 0x4b, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15,
	0x6c, 0x61, 0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x97, 0x02, 0x0a,
	0x09, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x0b, 0x48, 0x65, 0x6c, 0x6d, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x38, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x52, 0x09, 0x68, 0x65, 0x6c, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xa2, 0x02, 0x0a, 0x0d, 0x47, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3e, 0x0a, 0x09,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x66, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x0e,
	0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x34, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xc4, 0x03, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3b,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x29, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x43, 0x50, 0x10, 0x02, 0x22, 0x91, 0x01, 0x0a, 0x0a, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xf9,
	0x01, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x48, 0x0a, 0x0e, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x17,
	0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x65, 0x6c,
	0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x01, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x61, 0x76, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2f, 0x77, 0x65,
	0x61, 0x76, 0x65, 0x2d, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_core_types_proto_rawDescOnce sync.Once
	file_api_core_types_proto_rawDescData = file_api_core_types_proto_rawDesc
)

func file_api_core_types_proto_rawDescGZIP() []byte {
	file_api_core_types_proto_rawDescOnce.Do(func() {
		file_api_core_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_core_types_proto_rawDescData)
	})
	return file_api_core_types_proto_rawDescData
}

var file_api_core_types_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_core_types_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_core_types_proto_goTypes = []interface{}{
	(AutomationKind)(0),        // 0: gitops_core.v1.AutomationKind
	(SourceRef_SourceKind)(0),  // 1: gitops_core.v1.SourceRef.SourceKind
	(Bucket_Provider)(0),       // 2: gitops_core.v1.Bucket.Provider
	(*Interval)(nil),           // 3: gitops_core.v1.Interval
	(*SourceRef)(nil),          // 4: gitops_core.v1.SourceRef
	(*Condition)(nil),          // 5: gitops_core.v1.Condition
	(*GitRepositoryRef)(nil),   // 6: gitops_core.v1.GitRepositoryRef
	(*GroupVersionKind)(nil),   // 7: gitops_core.v1.GroupVersionKind
	(*Kustomization)(nil),      // 8: gitops_core.v1.Kustomization
	(*HelmChart)(nil),          // 9: gitops_core.v1.HelmChart
	(*HelmRelease)(nil),        // 10: gitops_core.v1.HelmRelease
	(*GitRepository)(nil),      // 11: gitops_core.v1.GitRepository
	(*HelmRepository)(nil),     // 12: gitops_core.v1.HelmRepository
	(*Bucket)(nil),             // 13: gitops_core.v1.Bucket
	(*Deployment)(nil),         // 14: gitops_core.v1.Deployment
	(*UnstructuredObject)(nil), // 15: gitops_core.v1.UnstructuredObject
}
var file_api_core_types_proto_depIdxs = []int32{
	1,  // 0: gitops_core.v1.SourceRef.kind:type_name -> gitops_core.v1.SourceRef.SourceKind
	4,  // 1: gitops_core.v1.Kustomization.sourceRef:type_name -> gitops_core.v1.SourceRef
	3,  // 2: gitops_core.v1.Kustomization.interval:type_name -> gitops_core.v1.Interval
	5,  // 3: gitops_core.v1.Kustomization.conditions:type_name -> gitops_core.v1.Condition
	7,  // 4: gitops_core.v1.Kustomization.inventory:type_name -> gitops_core.v1.GroupVersionKind
	4,  // 5: gitops_core.v1.HelmChart.sourceRef:type_name -> gitops_core.v1.SourceRef
	3,  // 6: gitops_core.v1.HelmChart.interval:type_name -> gitops_core.v1.Interval
	5,  // 7: gitops_core.v1.HelmChart.conditions:type_name -> gitops_core.v1.Condition
	3,  // 8: gitops_core.v1.HelmRelease.interval:type_name -> gitops_core.v1.Interval
	9,  // 9: gitops_core.v1.HelmRelease.helm_chart:type_name -> gitops_core.v1.HelmChart
	5,  // 10: gitops_core.v1.HelmRelease.conditions:type_name -> gitops_core.v1.Condition
	7,  // 11: gitops_core.v1.HelmRelease.inventory:type_name -> gitops_core.v1.GroupVersionKind
	6,  // 12: gitops_core.v1.GitRepository.reference:type_name -> gitops_core.v1.GitRepositoryRef
	3,  // 13: gitops_core.v1.GitRepository.interval:type_name -> gitops_core.v1.Interval
	5,  // 14: gitops_core.v1.GitRepository.conditions:type_name -> gitops_core.v1.Condition
	3,  // 15: gitops_core.v1.HelmRepository.interval:type_name -> gitops_core.v1.Interval
	5,  // 16: gitops_core.v1.HelmRepository.conditions:type_name -> gitops_core.v1.Condition
	3,  // 17: gitops_core.v1.Bucket.interval:type_name -> gitops_core.v1.Interval
	2,  // 18: gitops_core.v1.Bucket.provider:type_name -> gitops_core.v1.Bucket.Provider
	5,  // 19: gitops_core.v1.Bucket.conditions:type_name -> gitops_core.v1.Condition
	5,  // 20: gitops_core.v1.Deployment.conditions:type_name -> gitops_core.v1.Condition
	7,  // 21: gitops_core.v1.UnstructuredObject.groupVersionKind:type_name -> gitops_core.v1.GroupVersionKind
	5,  // 22: gitops_core.v1.UnstructuredObject.conditions:type_name -> gitops_core.v1.Condition
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_api_core_types_proto_init() }
func file_api_core_types_proto_init() {
	if File_api_core_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_core_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitRepositoryRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kustomization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_core_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnstructuredObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_core_types_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_core_types_proto_goTypes,
		DependencyIndexes: file_api_core_types_proto_depIdxs,
		EnumInfos:         file_api_core_types_proto_enumTypes,
		MessageInfos:      file_api_core_types_proto_msgTypes,
	}.Build()
	File_api_core_types_proto = out.File
	file_api_core_types_proto_rawDesc = nil
	file_api_core_types_proto_goTypes = nil
	file_api_core_types_proto_depIdxs = nil
}
