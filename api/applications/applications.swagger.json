{
  "swagger": "2.0",
  "info": {
    "title": "WeGo Applications API",
    "description": "The WeGo Applications API handles operations for Weave GitOps Applications",
    "version": "0.1"
  },
  "tags": [
    {
      "name": "Applications"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/applications/auth_providers/github": {
      "get": {
        "summary": "GetGithubDeviceCode retrieves a temporary device code for Github authentication.\nThis code is used to start the Github device-flow.",
        "operationId": "Applications_GetGithubDeviceCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGithubDeviceCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/auth_providers/github/status": {
      "post": {
        "summary": "GetGithubAuthStatus gets the status of the Github device flow authentication requests.\nOnce the user has completed the Github device flow, an access token will be returned.\nThis token will expired in 15 minutes, after which the user will need to complete the flow again\nto do Git Provider operations.",
        "operationId": "Applications_GetGithubAuthStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGithubAuthStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGithubAuthStatusRequest"
            }
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/auth_providers/gitlab": {
      "get": {
        "summary": "GetGitlabAuthURL returns the URL to initiate a GitLab OAuth PKCE flow.\nThe user must browse to the returned URL to authorize the OAuth callback to the GitOps UI.\nSee the GitLab OAuth docs for more more information:\nhttps://docs.gitlab.com/ee/api/oauth2.html#supported-oauth-20-flows",
        "operationId": "Applications_GetGitlabAuthURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGitlabAuthURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirectUri",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/auth_providers/gitlab/authorize": {
      "post": {
        "summary": "AuthorizeGitlab exchanges a GitLab code obtained via OAuth callback.\nThe returned token is useable for authentication with the GitOps server only.\nSee the GitLab OAuth docs for more more information:\nhttps://docs.gitlab.com/ee/api/oauth2.html#supported-oauth-20-flows",
        "operationId": "Applications_AuthorizeGitlab",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthorizeGitlabResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthorizeGitlabRequest"
            }
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/child_objects": {
      "post": {
        "summary": "GetChildObjects returns the children of a given object, specified by a GroupVersionKind.\nNot all Kubernets objects have children. For example, a Deployment has a child ReplicaSet, but a Service has no child objects.",
        "operationId": "Applications_GetChildObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetChildObjectsRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetChildObjectsReq"
            }
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/parse_repo_url": {
      "get": {
        "summary": "ParseRepoURL returns structured data about a git repository URL",
        "operationId": "Applications_ParseRepoURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ParseRepoURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/validate_token": {
      "post": {
        "summary": "ValidateProviderToken check to see if the git provider token is still valid",
        "operationId": "Applications_ValidateProviderToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateProviderTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateProviderTokenRequest"
            }
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/{automationName}/reconciled_objects": {
      "post": {
        "summary": "GetReconciledObjects returns a list of objects that were created as a result of the Application.\nThis list is derived by looking at the Kustomization that is associated with an Application.\nHelm Releases are not currently supported.",
        "operationId": "Applications_GetReconciledObjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetReconciledObjectsRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "automationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "automationNamespace": {
                  "type": "string"
                },
                "automationKind": {
                  "$ref": "#/definitions/v1AutomationKind"
                },
                "kinds": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1GroupVersionKind"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/{name}/commits": {
      "get": {
        "summary": "ListCommits returns the list of WeGo commits that the authenticated user has access to.",
        "operationId": "Applications_ListCommits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCommitsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Optional. A pagination token returned from a previous call\nthat indicates where this listing should continue from.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/applications/{name}/sync": {
      "post": {
        "summary": "SyncApplication triggers the Application reconciliation loop.",
        "operationId": "Applications_SyncApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SyncApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/authenticate/{providerName}": {
      "post": {
        "summary": "Authenticate generates jwt token using git provider name and git provider token arguments",
        "operationId": "Applications_Authenticate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "providerName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Applications"
        ]
      }
    },
    "/v1/featureflags": {
      "get": {
        "summary": "Config returns configuration information about the server",
        "operationId": "Applications_GetFeatureFlags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFeatureFlagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Applications"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AuthenticateResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v1AuthorizeGitlabRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        }
      }
    },
    "v1AuthorizeGitlabResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v1AutomationKind": {
      "type": "string",
      "enum": [
        "Kustomize",
        "Helm"
      ],
      "default": "Kustomize",
      "title": "AutomationKind represents the deployment method used"
    },
    "v1Commit": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1GetChildObjectsReq": {
      "type": "object",
      "properties": {
        "groupVersionKind": {
          "$ref": "#/definitions/v1GroupVersionKind"
        },
        "parentUid": {
          "type": "string"
        }
      }
    },
    "v1GetChildObjectsRes": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UnstructuredObject"
          }
        }
      }
    },
    "v1GetFeatureFlagsResponse": {
      "type": "object",
      "properties": {
        "flags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1GetGithubAuthStatusRequest": {
      "type": "object",
      "properties": {
        "deviceCode": {
          "type": "string"
        }
      }
    },
    "v1GetGithubAuthStatusResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "v1GetGithubDeviceCodeResponse": {
      "type": "object",
      "properties": {
        "userCode": {
          "type": "string"
        },
        "deviceCode": {
          "type": "string"
        },
        "validationURI": {
          "type": "string"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1GetGitlabAuthURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "v1GetReconciledObjectsRes": {
      "type": "object",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UnstructuredObject"
          }
        }
      }
    },
    "v1GitProvider": {
      "type": "string",
      "enum": [
        "Unknown",
        "GitHub",
        "GitLab"
      ],
      "default": "Unknown"
    },
    "v1GroupVersionKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "GroupVersionKind represents an objects Kubernetes API type data"
    },
    "v1ListCommitsResponse": {
      "type": "object",
      "properties": {
        "commits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Commit"
          }
        },
        "nextPageToken": {
          "type": "integer",
          "format": "int32",
          "description": "A pagination token returned from a previous call\nthat indicates from where listing should continue."
        }
      }
    },
    "v1ParseRepoURLResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/v1GitProvider"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "v1SyncApplicationResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "v1UnstructuredObject": {
      "type": "object",
      "properties": {
        "groupVersionKind": {
          "$ref": "#/definitions/v1GroupVersionKind"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "UnstructuredObject is a Kubernetes object of an unknown type"
    },
    "v1ValidateProviderTokenRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1GitProvider"
        }
      }
    },
    "v1ValidateProviderTokenResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    }
  }
}
